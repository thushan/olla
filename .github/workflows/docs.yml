name: Deploy Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ hashFiles('docs/requirements.txt', 'docs/mkdocs.yml') }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Install dependencies
        run: pip install -r docs/requirements.txt

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build documentation
        run: |
          cd docs
          mkdocs build --clean --strict

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/site

  deploy:
    # Only deploy on pushes to main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4